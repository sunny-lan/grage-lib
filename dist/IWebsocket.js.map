{"version":3,"file":"IWebsocket.js","sourceRoot":"","sources":["../src/IWebsocket.ts"],"names":[],"mappings":";;;AAGA,IAAY,eAGX;AAHD,WAAY,eAAe;IACvB,+DAAS,CAAA;IACT,qEAAY,CAAA;AAChB,CAAC,EAHW,eAAe,+BAAf,eAAe,QAG1B","sourcesContent":["\r\n\r\nexport type WebsocketMsg =ArrayBufferView | ArrayBuffer | string;\r\nexport enum ConnectionState{\r\n    Connected,\r\n    Disconnected\r\n}\r\nexport type ConnStateListener = (state: ConnectionState) => void;\r\nexport type MsgListener = (data: WebsocketMsg) => void;\r\nexport interface IWebsocket{\r\n    begin(url:string):()=>void\r\n    send(data:WebsocketMsg):void\r\n    onMessage(callback:MsgListener):()=>void\r\n    getConnectionState():ConnectionState\r\n    onConnectionStateChanged(callback:ConnStateListener):()=>void\r\n}\r\nexport interface W3CWebsocketMsg{\r\n    readonly data:any\r\n}\r\nexport type W3CMsgListener = (data: W3CWebsocketMsg) => void;\r\nexport interface IW3CWebsocketObj {\r\n    send(data:WebsocketMsg):void\r\n    readyState:number\r\n    onopen: () => void;\r\n    onmessage:W3CMsgListener|null\r\n    onerror: (error: Error) => void;\r\n\r\n    onclose: (event: IW3CCloseEvent) => void;\r\n}\r\nexport interface IW3CCloseEvent {\r\n    code: number;\r\n    reason: string;\r\n    wasClean: boolean;\r\n}\r\nexport interface IW3CWebsocket{\r\n    CLOSING:number\r\n    CLOSED:number\r\n    new (url:string):IW3CWebsocketObj\r\n}"]}
{"version":3,"file":"GrageAPI.js","sourceRoot":"","sources":["../src/GrageAPI.ts"],"names":[],"mappings":";;;AAEA,IAAY,iBAEX;AAFD,WAAY,iBAAiB;IACzB,2DAAK,CAAA;IAAE,yDAAI,CAAA;IAAE,yFAAoB,CAAA;AACrC,CAAC,EAFW,iBAAiB,iCAAjB,iBAAiB,QAE5B","sourcesContent":["import {Message} from \"./lib\";\r\n\r\nexport enum GrageDeviceStatus {\r\n    ALIVE, DEAD, NETWORK_DISCONNECTED\r\n}\r\n\r\nexport interface GrageAPI{\r\n    /**\r\n     * Connect to grage server at host\r\n     * @param host\r\n     */\r\n    begin(host:string):()=>void\r\n\r\n    /**\r\n     * Listen for messages from device\r\n     * @param deviceId\r\n     * @param callback\r\n     */\r\n    subscribe(deviceId:string, callback:(msg:Message)=>void):()=>void\r\n\r\n    /**\r\n     * Send message to device\r\n     * @param deviceId device to send to\r\n     * @param data Data to send\r\n     */\r\n    send(deviceId:string, data:any):void\r\n\r\n    /**\r\n     * Listen to status (alive/dead) changes from device\r\n     * @param deviceId\r\n     * @param callback\r\n     */\r\n    onStatusChanged(deviceId:string, callback:(livestate:GrageDeviceStatus)=>void):()=>void\r\n\r\n    /**\r\n     * Send a ping check to the device\r\n     * @param deviceId\r\n     */\r\n    requestPing(deviceId: string):void\r\n}"]}